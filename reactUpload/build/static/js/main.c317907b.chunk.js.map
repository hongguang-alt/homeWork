{"version":3,"sources":["config/index.js","axios/index.js","axios/api.js","page/login/index.jsx","page/upload/changePassword/index.jsx","page/upload/uploadWork/index.jsx","componet/outLogin/index.jsx","page/upload/manager/index.jsx","page/upload/index.jsx","App.js","index.js"],"names":["URL","axios","defaults","baseURL","interceptors","request","use","config","token","window","localStorage","getItem","headers","authorization","error","Promise","reject","response","data","upload","formdata","post","changeFileFormat","param","deteleOne","name","get","changefileName","value","Header","Layout","Footer","Content","Login","props","useState","errInfo","setErrInfo","loading","setLoading","tailLayout","wrapperCol","offset","span","onFinish","a","parms","status","msg","setItem","history","push","console","log","Fragment","style","height","textAlign","color","fontSize","margin","marginTop","tip","spinning","title","width","labelCol","Item","label","rules","required","message","Password","marginBottom","type","htmlType","background","ChangePassword","Form","useForm","form","values","getPassword","resetFields","success","initialValues","remember","getFieldValue","validator","rule","resolve","UploadWork","fileList","setFileList","uploading","setUploading","fileName","setFileName","uploadName","setUploadName","useEffect","toGetFileName","toUploadName","toUpload","res","onRemove","file","index","indexOf","newFileList","slice","splice","beforeUpload","fontWeight","content","format","detail","UploadOutlined","onClick","formData","FormData","forEach","append","disabled","length","TOutLogin","withRouter","setName","jwt","verify","menu","key","removeItem","overlay","className","e","preventDefault","DownOutlined","confirm","Modal","CollectionCreateForm","visible","onCreate","onCancel","initName","editform","setFieldsValue","destroyOnClose","okText","cancelText","onOk","validateFields","then","catch","info","ReNameForm","Manager","noHomeWorkList","setNoHomeWorkList","dataSource","setDataSource","editVisible","setEditVisible","setInitName","changeSid","setChangeSid","reNameVisible","setReNameVisible","getNoHomeWorkList","getDetailList","getAllFile","location","assign","getOneFile","toChangeFileFormat","columns","dataIndex","sorter","b","Number","sid","Date","ctime","getTime","render","text","moment","record","size","toDeleteData","newValue","display","flexWrap","Array","isArray","map","item","bold","image","Empty","PRESENTED_IMAGE_SIMPLE","TextArea","extra","marginLeft","Sider","Upload","show","setShow","role","setRole","justifyContent","overflow","borderRight","defaultSelectedKeys","keyPath","domEvent","icon","AppstoreOutlined","FormOutlined","SettingOutlined","padding","App","path","exact","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c317907b.chunk.js","sourcesContent":["export const URL = \"http://hongguang.club:3001\"\n// export const URL = \"http://localhost:3001\"\nexport const sercet = 'yinxiu'","import axios from 'axios'\nimport {\n    URL\n} from '../config'\n\n//设置axios的基本配置\naxios.defaults.baseURL = URL;\n\n// 添加请求拦截器\naxios.interceptors.request.use(function (config) {\n    // 在发送请求之前做些什么\n    let token = window.localStorage.getItem('token')\n    if (token) {\n        config.headers.authorization = 'Bearer ' + token;\n    }\n    return config;\n}, function (error) {\n    // 对请求错误做些什么\n    return Promise.reject(error);\n});\n\n// 添加响应拦截器\naxios.interceptors.response.use(function (response) {\n    const {\n        data\n    } = response\n    // 对响应数据做点什么\n    return data;\n}, function (error) {\n    // 对响应错误做点什么\n    return Promise.reject(error);\n});\n\nexport default axios","import axios from './index'\n\n//登陆接口\nexport const login = (parms) => {\n    return axios.post('/user/login', {\n        ...parms\n    })\n}\n\n//获取文件内容的接口\nexport const getFileName = () => {\n    return axios.get('/user/fileName')\n}\n\n//上传文件的接口\nexport const upload = (formdata) => {\n    return axios.post('/file/uploadfile',\n        formdata\n    )\n}\n\n//修改密码的接口\nexport const password = (parms) => {\n    return axios.post('/user/password', {\n        ...parms\n    })\n}\n\n\n//获取未上交作业名单的接口\nexport const noHomeWorkListName = () => {\n    return axios.get('/user/noFileName')\n}\n\n//修改文件命名格式的接口\nexport const changeFileFormat = (param) => {\n    return axios.post('/user/changeFile', {\n        ...param\n    })\n}\n\n//获取详情列表\nexport const detailList = () => {\n    return axios.get('/user/detail')\n}\n\n//清空所有数据\nexport const deleteAll = () => {\n    return axios.get('/file/deleteall')\n}\n\n//删除单个文件 \nexport const deteleOne = ({\n    name\n}) => {\n    return axios.get('/file/delete/' + name)\n}\n\n//获取上传的文件名称\nexport const getUploadName = () => {\n    return axios.get('/user/uploadName')\n}\n\n//修改文件名称的接口\nexport const changefileName = (value)=>{\n    return axios.post('/file/changeName',{\n        ...value\n    })\n}","import React, { useState } from 'react'\nimport { Layout, Card, Form, Input, Button, Spin } from 'antd';\nimport { login } from '../../axios/api'\nconst { Header, Footer, Content } = Layout;\n\nconst Login = (props) => {\n    const [errInfo, setErrInfo] = useState('')\n    const [loading, setLoading] = useState(false)\n    const layout = {\n        labelCol: {\n            span: 6,\n        },\n        wrapperCol: {\n            span: 16,\n        },\n    }\n    const tailLayout = {\n        wrapperCol: {\n            offset: 8,\n            span: 16,\n        },\n    }\n    //表单验证成功\n    const onFinish = async (value) => {\n        try {\n            setLoading(true)\n            const { status, msg, token } = await login(value)\n            if (status === '201') {\n                setLoading(false)\n                setErrInfo(msg)\n            } else {\n                setErrInfo('')\n                setLoading(false)\n                window.localStorage.setItem('token', token)\n                props.history.push('/upload')\n            }\n        } catch (e) {\n            console.log(e)\n        }\n    }\n    return (\n        <React.Fragment>\n            <Layout style={{ height: '100%' }}>\n                <Header style={{ textAlign: 'center', color: 'white', fontSize: '20px' }}>\n                    作业上交系统\n                </Header>\n\n                <Content style={{ margin: 'auto', marginTop: '100px' }}>\n                    <Spin tip='请求中' spinning={loading}>\n                        <Card title=\"登陆\" style={{ width: 500 }}>\n                            <Form\n                                {...layout}\n                                name=\"basic\"\n                                onFinish={onFinish}\n                            >\n                                <Form.Item\n                                    label=\"学号\"\n                                    name=\"sid\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: '请输入你的学号！',\n                                        },\n                                    ]}\n                                >\n                                    <Input />\n                                </Form.Item>\n\n                                <Form.Item\n                                    label=\"密码\"\n                                    name=\"password\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: '请输入你的密码！',\n                                        },\n                                    ]}\n                                >\n                                    <Input.Password />\n                                </Form.Item>\n                                {errInfo ? <div style={{ color: 'red', textAlign: 'center', marginBottom: '10px' }}>{errInfo}</div> : ''}\n                                <Form.Item {...tailLayout}>\n                                    <Button type=\"primary\" htmlType=\"submit\">\n                                        登陆\n                                </Button>\n                                </Form.Item>\n                            </Form>\n                        </Card>\n                    </Spin>\n                </Content>\n                <Footer style={{ background: '#041527', color: 'white', textAlign: 'center' }}>\n                    @网络工程171\n                </Footer>\n            </Layout>\n        </React.Fragment>\n    )\n}\n\nexport default Login","import React from 'react'\nimport { Card, Input, Form, Button, message } from 'antd'\nimport { password } from '../../../axios/api'\n\nconst ChangePassword = () => {\n    const [form] = Form.useForm();\n\n    //布局\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    };\n    const tailLayout = {\n        wrapperCol: { offset: 10, span: 14 },\n    };\n    const onFinish = async values => {\n        getPassword(values)\n        try {\n            await form.resetFields()\n\n        } catch (e) {\n            console.log(e)\n        }\n    };\n\n\n    //调用修改密码的接口\n    const getPassword = async (values) => {\n        try {\n            let { status, msg } = await password(values)\n            if (status == '200') {\n                message.success('修改成功')\n            } else {\n                message.error(msg)\n            }\n        } catch (e) {\n            message.error('修改密码接口请求失败')\n        }\n\n    }\n\n    return (\n        <React.Fragment>\n            <h3>修改密码</h3>\n            <Card style={{ width: '100%' }}>\n                <div style={{ width: '300px', margin: \"auto\" }}>\n                    <Form\n                        {...layout}\n                        name=\"basic\"\n                        initialValues={{ remember: true }}\n                        onFinish={onFinish}\n                        form={form}\n                    >\n                        <Form.Item\n                            label=\"旧密码\"\n                            name=\"oldPassword\"\n                            rules={[{ required: true, message: '请输入旧密码!' }]}\n                        >\n                            <Input.Password />\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"新密码\"\n                            name=\"newPassword\"\n                            rules={[{ required: true, message: '请输入新密码!' },\n                            ({ getFieldValue }) => ({\n                                validator(rule, value) {\n                                    if (value && getFieldValue('oldPassword') === value) {\n                                        return Promise.reject('新密码不能和旧密码相同!');\n                                    }\n                                    return Promise.resolve();\n                                },\n                            }),\n                            ]}\n                        >\n                            <Input.Password />\n                        </Form.Item>\n                        <Form.Item {...tailLayout}>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                提交\n                        </Button>\n                        </Form.Item>\n                    </Form>\n                </div>\n            </Card>\n        </React.Fragment>\n    )\n}\n\nexport default ChangePassword","import React, { useState, useEffect } from 'react'\nimport { Card, Button, Upload, message, Empty } from 'antd'\nimport { UploadOutlined } from '@ant-design/icons';\nimport { getFileName, upload, getUploadName } from '../../../axios/api'\n\nconst UploadWork = () => {\n    const [fileList, setFileList] = useState([])\n    const [uploading, setUploading] = useState(false)\n    const [fileName, setFileName] = useState({})\n    const [uploadName, setUploadName] = useState('')\n\n    //初始化数据\n    useEffect(() => {\n        toGetFileName()\n        toUploadName()\n    }, [])\n\n    //获取文件名以及格式\n    const toGetFileName = async () => {\n        try {\n            let { status, data, msg } = await getFileName()\n            if (status === '200') {\n                setFileName(data)\n            } else {\n                message.error(msg)\n            }\n        } catch (e) {\n            message.error('请求文件名称接口失败')\n        }\n    }\n\n    //上传文件的接口\n    const toUpload = async (formdata) => {\n        try {\n            let { status, msg } = await upload(formdata)\n            if (status === '200') {\n                setFileList([])\n                setUploading(false)\n                toUploadName()\n                message.success('上传成功')\n            } else {\n                message.error(msg)\n                setUploading(false)\n            }\n        } catch (e) {\n            message.error('请求上传接口失败')\n            setUploading(false)\n        }\n    }\n\n    //获取上传文件名称的接口\n    const toUploadName = async () => {\n        try {\n            let res = await getUploadName()\n            if (res.status === '200') {\n                const { data } = res\n                setUploadName(data.fileName)\n            } else {\n                message.error('请求上传文件名称接口失败')\n            }\n        } catch (e) {\n            message.error('请求上传文件名称接口失败')\n        }\n    }\n\n    const props = {\n        onRemove: file => {\n            const index = fileList.indexOf(file);\n            const newFileList = fileList.slice();\n            newFileList.splice(index, 1)\n            setFileList(newFileList)\n        },\n        beforeUpload: file => {\n            setFileList([file])\n            return false;\n        },\n        fileList,\n    };\n\n    const handleUpload = () => {\n        setUploading(true)\n        const formData = new FormData();\n        fileList.forEach(file => {\n            formData.append('file', file);\n        })\n        toUpload(formData)\n    }\n\n    return <React.Fragment>\n        <h3>上传作业</h3>\n        <Card title='上传要求' style={{ width: '100%', marginBottom: '50px' }}>\n            <div style={{ textAlign: 'center' }}>\n                <div>\n                    <span style={{ fontSize: '14px', fontWeight: 'bold' }}>本次上传的作业：</span>\n                    <span style={{ color: 'red' }}>{fileName.content}</span>\n                </div>\n                <div>\n                    <span style={{ fontSize: '14px', fontWeight: 'bold' }}>命名方式：</span>\n                    <span style={{ color: 'red' }}>{fileName.format}</span>\n                </div>\n                {fileName.detail ? <div>\n                    <span style={{ fontSize: '14px', fontWeight: 'bold' }}>详细说明：</span>\n                    <span style={{ color: 'red' }}>{fileName.detail}</span>\n                </div> : ''}\n            </div>\n        </Card>\n        <Card title='上传内容'>\n            <div style={{ marginBottom: 15 }}>\n                {uploadName ? <div>你已经上传了文件<a>{uploadName}</a>文件</div> : <div>你还没有上传任何文件，点击上传按钮进行上传</div>}\n            </div>\n            <Upload {...props}>\n                <Button>\n                    <UploadOutlined />  上传\n                </Button>\n            </Upload>\n            <Button\n                type=\"primary\"\n                onClick={handleUpload}\n                disabled={fileList.length === 0}\n                loading={uploading}\n                style={{ marginTop: 16 }}\n            >\n                {uploading ? '上传中' : '开始上传'}\n            </Button>\n        </Card>\n    </React.Fragment >\n}\n\nexport default UploadWork","import React from 'react'\nimport { Menu, Dropdown } from 'antd';\nimport { DownOutlined } from '@ant-design/icons';\nimport { withRouter } from 'react-router'\nimport jwt from 'jsonwebtoken'\nimport { useState, useEffect } from 'react';\nimport { sercet } from '../../config'\n\nconst OutLogin = (props) => {\n    const [name, setName] = useState('')\n\n    useEffect(() => {\n        let { name } = jwt.verify(window.localStorage.getItem('token'), sercet)\n        setName(name)\n    })\n    //退出的函数\n    const outLogin = () => {\n        window.localStorage.removeItem(\"token\")\n        props.history.push('/')\n    }\n    const menu = (\n        <Menu onClick={({ key }) => {\n            if (key === 'out') {\n                outLogin()\n            }\n        }}>\n            <Menu.Item key='out'>\n                退出\n            </Menu.Item>\n        </Menu>\n    );\n    return (\n        <Dropdown overlay={menu}>\n            <a className=\"ant-dropdown-link\" onClick={e => e.preventDefault()}>\n                欢迎你，{name} <DownOutlined />\n            </a>\n        </Dropdown>\n    )\n}\n\nconst TOutLogin = withRouter(OutLogin)\nexport default TOutLogin","import React, { useEffect, useState } from 'react'\nimport moment from 'moment'\nimport { URL } from '../../../config'\nimport { Card, Button, Table, Space, Modal, Form, Input, message, Empty } from 'antd'\nimport { noHomeWorkListName, changeFileFormat, detailList, deleteAll, deteleOne, changefileName } from '../../../axios/api'\nconst { confirm } = Modal;\n\n\nconst CollectionCreateForm = ({ visible, onCreate, onCancel, initName }) => {\n    const [editform] = Form.useForm();\n    useEffect(() => {\n        if (editform) {\n            editform.setFieldsValue({\n                name: initName\n            })\n        }\n    })\n    return (\n        <Modal\n            visible={visible}\n            destroyOnClose={true}\n            title=\"重命名\"\n            okText=\"确定\"\n            cancelText=\"取消\"\n            onCancel={onCancel}\n            onOk={() => {\n                editform\n                    .validateFields()\n                    .then((values) => {\n                        // editform.resetFields();\n                        onCreate(values);\n                    })\n                    .catch((info) => {\n                        console.log('验证失败', info);\n                    });\n            }}\n        >\n            <Form\n                form={editform}\n                name=\"form_in_modal\"\n                initialValues={{\n                    name: initName,\n                }}\n            >\n                <Form.Item\n                    name=\"name\"\n                    label=\"文件名称\"\n                    rules={[\n                        {\n                            required: true,\n                            message: '请输入重名名的文件名称',\n                        },\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n            </Form>\n        </Modal>\n    );\n};\n\n\nconst ReNameForm = ({ visible, onCreate, onCancel }) => {\n    const [editform] = Form.useForm();\n    return (\n        <Modal\n            visible={visible}\n            destroyOnClose={true}\n            title=\"导出文件名称\"\n            okText=\"确定\"\n            cancelText=\"取消\"\n            onCancel={onCancel}\n            onOk={() => {\n                editform\n                    .validateFields()\n                    .then((values) => {\n                        editform.resetFields();\n                        onCreate(values);\n                    })\n                    .catch((info) => {\n                        console.log('验证失败', info);\n                    });\n            }}\n        >\n            <Form\n                form={editform}\n                name=\"form_in_modal\"\n                initialValues={{\n                    name: '网络工程171.zip',\n                }}\n            >\n                <Form.Item\n                    name=\"name\"\n                    label=\"文件名称\"\n                    rules={[\n                        {\n                            required: true,\n                            message: '请输入重名名的文件名称',\n                        },\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n            </Form>\n        </Modal>\n    );\n};\n\nconst Manager = () => {\n    const [noHomeWorkList, setNoHomeWorkList] = useState([])\n    const [dataSource, setDataSource] = useState([])\n    const [editVisible, setEditVisible] = useState(false)\n    const [initName, setInitName] = useState('')\n    const [changeSid, setChangeSid] = useState('')\n    const [reNameVisible, setReNameVisible] = useState(false)\n    const [form] = Form.useForm()\n\n\n    useEffect(() => {\n        getNoHomeWorkList()\n        getDetailList()\n    }, [])\n\n    const onFinish = (value) => {\n        toChangeFileFormat(value)\n        form.resetFields()\n    }\n\n    //获取全部文件\n    const getAllFile = async (name) => {\n        const token = window.localStorage.getItem('token')\n        window.location.assign(`${URL}/file/downloadall/` + name + '/' + token)\n    }\n\n    //导出单个文件\n    const getOneFile = async (name) => {\n        const token = window.localStorage.getItem('token')\n        window.location.assign(`${URL}/file/download/` + name + '/' + token)\n    }\n\n    //修改文件名称的接口\n    const toChangeFileFormat = async (param) => {\n        try {\n            let { msg, status } = await changeFileFormat(param)\n            if (status == '200') {\n                message.success('修改成功')\n            } else {\n                message.error(msg)\n            }\n        } catch (e) {\n            console.log(e)\n            message.error(\"访问修改接口失败\")\n        }\n    }\n\n\n    //获取未完成作业的列表\n    const getNoHomeWorkList = async () => {\n        try {\n            let { data, status, msg } = await noHomeWorkListName()\n            if (status == '200') {\n                message.success('获取未完成作业列表成功')\n                setNoHomeWorkList(data.data)\n            } else {\n                message.error(msg)\n            }\n        } catch (e) {\n            console.log(e)\n            message.error('获取未完成作业接口失败')\n        }\n    }\n\n    //获取文件详情数据的接口\n    const getDetailList = async () => {\n        try {\n            let { data, status, msg } = await detailList()\n            if (status == '200') {\n                message.success('获取列表成功')\n                setDataSource(data.data)\n            } else {\n                message.error(msg)\n            }\n        } catch (e) {\n\n        }\n    }\n\n\n    const columns = [\n        {\n            title: '姓名',\n            dataIndex: 'name',\n            key: 'name',\n        },\n        {\n            title: '学号',\n            dataIndex: 'sid',\n            key: 'sid',\n            sorter: (a, b) => Number(a.sid) - Number(b.sid)\n        }, {\n            title: '文件名称',\n            dataIndex: 'fileName',\n            key: 'fileName'\n        },\n        {\n            title: '提交时间',\n            dataIndex: 'ctime',\n            key: 'ctime',\n            sorter: (a, b) => new Date(a.ctime).getTime() - new Date(b.ctime).getTime(),\n            render: (text) => {\n                return moment(text).format('YYYY-MM-DD HH:mm:ss')\n            }\n        },\n        {\n            title: '操作',\n            dataIndex: 'action',\n            key: 'action',\n            render: (text, record) => {\n                return <Space size=\"middle\">\n                    <a onClick={() => toDeleteData(record)}>删除</a>\n                    <a onClick={() => {\n                        setEditVisible(true)\n                        setInitName(record.fileName)\n                        setChangeSid(record.sid)\n                    }}>编辑</a>\n                    <a onClick={() => {\n                        getOneFile(record.fileName)\n                    }}>导出</a>\n                </Space>\n            }\n        }\n    ];\n\n    const layout = {\n        labelCol: {\n            span: 6,\n        },\n        wrapperCol: {\n            span: 16,\n        },\n    }\n    const tailLayout = {\n        wrapperCol: {\n            offset: 10,\n            span: 14,\n        },\n    }\n\n    const toDeleteData = (record) => {\n        confirm({\n            title: '确定删除这条数据?',\n            okText: \"确认\",\n            cancelText: \"取消\",\n            onOk: async () => {\n                try {\n                    const { status, msg } = await deteleOne({ name: record.fileName })\n                    if (status === '200') {\n                        message.success('删除文档成功')\n                        getDetailList()\n                        getNoHomeWorkList()\n                    } else {\n                        message.error(msg)\n                    }\n                } catch (e) {\n                    console.log(e)\n                    message.error('删除单个接口失败')\n                }\n\n            },\n            onCancel() {\n                console.log('Cancel');\n            },\n        });\n    }\n\n    const toDeleteAll = () => {\n        confirm({\n            title: '确定清空数据?',\n            okText: \"确认\",\n            cancelText: \"取消\",\n            onOk: async () => {\n                try {\n                    const { status, msg } = await deleteAll()\n                    if (status == '200') {\n                        message.success('删除全部文档成功')\n                        getDetailList()\n                        getNoHomeWorkList()\n                    } else {\n                        message.error(msg)\n                    }\n                } catch (e) {\n                    message.error('删除全部接口失败')\n                }\n            },\n            onCancel() {\n                console.log('Cancel');\n            },\n        });\n    }\n\n    //修改文件名称的表单\n    const onCreate = async (value) => {\n        let newValue = {\n            ...value,\n            sid: changeSid\n        }\n        try {\n            let { status, msg } = await changefileName(newValue)\n            if (status === '200') {\n                message.success(msg)\n                setEditVisible(false)\n                getDetailList()\n            }\n        } catch (e) {\n            // message.error(e)\n            console.log(e)\n        }\n    }\n    const onReNameCreate = (value) => {\n        getAllFile(value.name)\n        setReNameVisible(false)\n    }\n    return (\n        <React.Fragment>\n            <h3>管理作业</h3>\n            <Card title='作业未上交名单' style={{ marginBottom: '50px' }} >\n                <div style={{ display: 'flex', flexWrap: 'wrap' }}>\n                    {\n                        Array.isArray(noHomeWorkList) && noHomeWorkList.length !== 0 ? noHomeWorkList.map((item, index) => {\n                            return <div key={index} style={{ width: '50px', textAlign: 'center', bold: 'bolder' }}>{item}</div>\n                        }) : <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                    }\n                </div>\n            </Card>\n            <Card title='作业内容' style={{ marginBottom: '50px' }}>\n                <div style={{ width: '600px', margin: 'auto' }}>\n                    <Form\n                        {...layout}\n                        name=\"basic\"\n                        onFinish={onFinish}\n                        form={form}\n                    >\n                        <Form.Item\n                            label=\"上传作业内容\"\n                            name=\"content\"\n                            rules={[{ required: true, message: '请输入作业内容' }]}\n                        >\n                            <Input />\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"命名格式\"\n                            name=\"format\"\n                            rules={[{ required: true, message: '请输入命名格式' }]}\n                        >\n                            <Input />\n                        </Form.Item>\n                        <Form.Item\n                            label=\"详细说明\"\n                            name=\"detail\"\n                        >\n                            <Input.TextArea />\n                        </Form.Item>\n                        <Form.Item {...tailLayout}>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                提交\n                        </Button>\n                        </Form.Item>\n                    </Form>\n                </div>\n            </Card>\n            <Card title='作业列表' extra={\n                <div>\n                    <Button type='primary' style={{ fontSize: \"14px\" }} onClick={() => { setReNameVisible(true) }}>全部导出</Button>\n                    <Button type='primary' style={{ fontSize: \"14px\", marginLeft: '10px' }} onClick={toDeleteAll}>清空数据</Button>\n                </div>}>\n                <Table dataSource={dataSource} columns={columns} />\n            </Card>\n            <CollectionCreateForm\n                visible={editVisible}\n                onCreate={onCreate}\n                onCancel={() => {\n                    setEditVisible(false);\n                }}\n                initName={initName}\n            />\n            <ReNameForm\n                visible={reNameVisible}\n                onCreate={onReNameCreate}\n                onCancel={() => {\n                    setReNameVisible(false);\n                }}\n            />\n        </React.Fragment>\n    )\n}\n\nexport default Manager","import React, { useState } from 'react'\nimport { AppstoreOutlined, SettingOutlined, FormOutlined } from '@ant-design/icons';\nimport { Layout, Menu } from 'antd'\nimport ChangePassword from './changePassword'\nimport UploadWork from './uploadWork'\nimport OutLogin from '../../componet/outLogin'\nimport Manager from './manager'\nimport { useEffect } from 'react';\nimport { sercet } from '../../config'\nimport jwt from 'jsonwebtoken'\nconst { Header, Content, Sider } = Layout;\n\n\n\nconst Upload = () => {\n    const [show, setShow] = useState('uploadwork')\n    const [role, setRole] = useState('student')\n\n    useEffect(() => {\n        let { role } = jwt.verify(window.localStorage.getItem('token'), sercet)\n        setRole(role)\n    })\n    const getRight = () => {\n        if (show === 'changep') {\n            return <ChangePassword />\n        } else if (show === 'uploadwork') {\n            return <UploadWork />\n        } else if (show === 'manager') {\n            return <Manager />\n        }\n    }\n    return (\n        <React.Fragment>\n            <Layout style={{ height: '100%' }}>\n                <Header style={{ display: 'flex', justifyContent: 'space-between' }}>\n                    <h1 style={{ color: '#fff' }}>作业上传</h1>\n                    <OutLogin />\n                </Header>\n                <Layout>\n                    <Sider style={{ overflow: 'hidden', background: 'white' }}>\n                        <Menu style={{ borderRight: 0, fontSize: '14px' }}\n                            defaultSelectedKeys={['uploadwork']}\n                            onClick={({ item, key, keyPath, domEvent }) => {\n                                setShow(key)\n                            }}\n\n                        >\n                            <Menu.Item key=\"uploadwork\" icon={<AppstoreOutlined />} >\n                                上传作业文件\n                            </Menu.Item>\n                            <Menu.Item key=\"changep\" icon={<FormOutlined />}>\n                                修改密码\n                            </Menu.Item>\n                            {\n                                role === 'admin' ? <Menu.Item key=\"manager\" icon={<SettingOutlined />}>\n                                    管理作业\n                            </Menu.Item> : null\n                            }\n\n                        </Menu>\n                    </Sider>\n                    <Content>\n                        <div style={{ padding: 30 }}>\n                            {getRight()}\n                        </div>\n                    </Content>\n                </Layout>\n            </Layout>\n        </React.Fragment>\n    )\n}\n\nexport default Upload","import React from 'react';\nimport Login from './page/login'\nimport Upload from './page/upload'\nimport { HashRouter , Switch ,Route } from 'react-router-dom'\nimport 'antd/dist/antd.css'\n\nfunction App() {\n  return (\n    <div style={{height:'100%'}}>\n      <HashRouter>\n      <Switch>\n        <Route path='/' exact component={Login} />\n        <Route path='/login' exact component={Login} />\n        <Route path='/upload' exact component={Upload} />\n      </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}