{"ast":null,"code":"import _regeneratorRuntime from\"/Users/wanghongguang/Desktop/homework/reactUpload/reactupload/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/wanghongguang/Desktop/homework/reactUpload/reactupload/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/wanghongguang/Desktop/homework/reactUpload/reactupload/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{Card,Input,Form,Button,message}from'antd';import{password}from'../../../axios/api';var ChangePassword=function ChangePassword(){var _Form$useForm=Form.useForm(),_Form$useForm2=_slicedToArray(_Form$useForm,1),form=_Form$useForm2[0];//布局\nvar layout={labelCol:{span:8},wrapperCol:{span:16}};var tailLayout={wrapperCol:{offset:10,span:14}};var onFinish=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:getPassword(values);_context.prev=1;_context.next=4;return form.resetFields();case 4:_context.next=9;break;case 6:_context.prev=6;_context.t0=_context[\"catch\"](1);console.log(_context.t0);case 9:case\"end\":return _context.stop();}}},_callee,null,[[1,6]]);}));return function onFinish(_x){return _ref.apply(this,arguments);};}();//调用修改密码的接口\nvar getPassword=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(values){var _yield$password,status,msg;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return password(values);case 3:_yield$password=_context2.sent;status=_yield$password.status;msg=_yield$password.msg;if(status=='200'){message.success('修改成功');}else{message.error(msg);}_context2.next=12;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](0);message.error('修改密码接口请求失败');case 12:case\"end\":return _context2.stop();}}},_callee2,null,[[0,9]]);}));return function getPassword(_x2){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h3\",null,\"\\u4FEE\\u6539\\u5BC6\\u7801\"),/*#__PURE__*/React.createElement(Card,{style:{width:'100%'}},/*#__PURE__*/React.createElement(\"div\",{style:{width:'300px',margin:\"auto\"}},/*#__PURE__*/React.createElement(Form,Object.assign({},layout,{name:\"basic\",initialValues:{remember:true},onFinish:onFinish,form:form}),/*#__PURE__*/React.createElement(Form.Item,{label:\"\\u65E7\\u5BC6\\u7801\",name:\"oldPassword\",rules:[{required:true,message:'请输入旧密码!'}]},/*#__PURE__*/React.createElement(Input.Password,null)),/*#__PURE__*/React.createElement(Form.Item,{label:\"\\u65B0\\u5BC6\\u7801\",name:\"newPassword\",rules:[{required:true,message:'请输入新密码!'},function(_ref3){var getFieldValue=_ref3.getFieldValue;return{validator:function validator(rule,value){if(value&&getFieldValue('oldPassword')===value){return Promise.reject('新密码不能和旧密码相同!');}return Promise.resolve();}};}]},/*#__PURE__*/React.createElement(Input.Password,null)),/*#__PURE__*/React.createElement(Form.Item,tailLayout,/*#__PURE__*/React.createElement(Button,{type:\"primary\",htmlType:\"submit\"},\"\\u63D0\\u4EA4\"))))));};export default ChangePassword;","map":{"version":3,"sources":["/Users/wanghongguang/Desktop/homework/reactUpload/reactupload/src/page/upload/changePassword/index.jsx"],"names":["React","Card","Input","Form","Button","message","password","ChangePassword","useForm","form","layout","labelCol","span","wrapperCol","tailLayout","offset","onFinish","values","getPassword","resetFields","console","log","status","msg","success","error","width","margin","remember","required","getFieldValue","validator","rule","value","Promise","reject","resolve"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Card, Input, Form, Button, message } from 'antd'\nimport { password } from '../../../axios/api'\n\nconst ChangePassword = () => {\n    const [form] = Form.useForm();\n\n    //布局\n    const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    };\n    const tailLayout = {\n        wrapperCol: { offset: 10, span: 14 },\n    };\n    const onFinish = async values => {\n        getPassword(values)\n        try {\n            await form.resetFields()\n\n        } catch (e) {\n            console.log(e)\n        }\n    };\n\n\n    //调用修改密码的接口\n    const getPassword = async (values) => {\n        try {\n            let { status, msg } = await password(values)\n            if (status == '200') {\n                message.success('修改成功')\n            } else {\n                message.error(msg)\n            }\n        } catch (e) {\n            message.error('修改密码接口请求失败')\n        }\n\n    }\n\n    return (\n        <React.Fragment>\n            <h3>修改密码</h3>\n            <Card style={{ width: '100%' }}>\n                <div style={{ width: '300px', margin: \"auto\" }}>\n                    <Form\n                        {...layout}\n                        name=\"basic\"\n                        initialValues={{ remember: true }}\n                        onFinish={onFinish}\n                        form={form}\n                    >\n                        <Form.Item\n                            label=\"旧密码\"\n                            name=\"oldPassword\"\n                            rules={[{ required: true, message: '请输入旧密码!' }]}\n                        >\n                            <Input.Password />\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"新密码\"\n                            name=\"newPassword\"\n                            rules={[{ required: true, message: '请输入新密码!' },\n                            ({ getFieldValue }) => ({\n                                validator(rule, value) {\n                                    if (value && getFieldValue('oldPassword') === value) {\n                                        return Promise.reject('新密码不能和旧密码相同!');\n                                    }\n                                    return Promise.resolve();\n                                },\n                            }),\n                            ]}\n                        >\n                            <Input.Password />\n                        </Form.Item>\n                        <Form.Item {...tailLayout}>\n                            <Button type=\"primary\" htmlType=\"submit\">\n                                提交\n                        </Button>\n                        </Form.Item>\n                    </Form>\n                </div>\n            </Card>\n        </React.Fragment>\n    )\n}\n\nexport default ChangePassword"]},"metadata":{},"sourceType":"module"}