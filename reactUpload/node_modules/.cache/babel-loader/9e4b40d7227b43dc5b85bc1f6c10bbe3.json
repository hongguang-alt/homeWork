{"ast":null,"code":"var _jsxFileName = \"/Users/wanghongguang/Desktop/homework/reactUpload/reactupload/src/page/upload/uploadWork/index.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Card, Button, Upload, message } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { getFileName, upload } from '../../../axios/api';\n\nconst UploadWork = () => {\n  const [fileList, setFileList] = useState([]);\n  const [uploading, setUploading] = useState(false);\n  const [fileName, setFileName] = useState({}); //初始化数据\n\n  useEffect(() => {\n    toGetFileName();\n  }, []); //获取文件名以及格式\n\n  const toGetFileName = async () => {\n    try {\n      let {\n        status,\n        data,\n        msg\n      } = await getFileName();\n\n      if (status == '200') {\n        setFileName(data);\n      } else {\n        message.error(msg);\n      }\n    } catch (e) {\n      message.error('请求文件名称接口失败');\n    }\n  }; //上传文件的接口\n\n\n  const toUpload = async formdata => {\n    try {\n      let {\n        status,\n        msg\n      } = await upload(formdata);\n\n      if (status === '200') {\n        setFileList([]);\n        setUploading(false);\n        message.success('上传成功');\n      } else {\n        message.error(msg);\n        setUploading(false);\n      }\n    } catch (e) {\n      message.error('请求上传接口失败');\n      setUploading(false);\n    }\n  };\n\n  const props = {\n    onRemove: file => {\n      const index = fileList.indexOf(file);\n      const newFileList = fileList.slice();\n      newFileList.splice(index, 1);\n      setFileList(newFileList);\n    },\n    beforeUpload: file => {\n      setFileList([file]);\n      return false;\n    },\n    fileList\n  };\n\n  const handleUpload = () => {\n    setUploading(true);\n    upload(fileList[0]);\n    const formData = new FormData();\n    fileList.forEach(file => {\n      formData.append('files[]', file);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"\\u4E0A\\u4F20\\u4F5C\\u4E1A\"), /*#__PURE__*/React.createElement(Card, {\n    title: \"\\u4E0A\\u4F20\\u8981\\u6C42\",\n    style: {\n      width: '100%',\n      marginBottom: '50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: '14px',\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, \"\\u672C\\u6B21\\u4E0A\\u4F20\\u7684\\u4F5C\\u4E1A\\uFF1A\"), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, fileName.content)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      fontSize: '14px',\n      fontWeight: 'bold'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, \"\\u547D\\u540D\\u65B9\\u5F0F\\uFF1A\"), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, fileName.format)))), /*#__PURE__*/React.createElement(Card, {\n    title: \"\\u4E0A\\u4F20\\u5185\\u5BB9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Upload, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(UploadOutlined, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }), \"  \\u4E0A\\u4F20\")), /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    onClick: handleUpload,\n    disabled: fileList.length === 0,\n    loading: uploading,\n    style: {\n      marginTop: 16\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, uploading ? '上传中' : '开始上传')));\n};\n\nexport default UploadWork;","map":{"version":3,"sources":["/Users/wanghongguang/Desktop/homework/reactUpload/reactupload/src/page/upload/uploadWork/index.jsx"],"names":["React","useState","useEffect","Card","Button","Upload","message","UploadOutlined","getFileName","upload","UploadWork","fileList","setFileList","uploading","setUploading","fileName","setFileName","toGetFileName","status","data","msg","error","e","toUpload","formdata","success","props","onRemove","file","index","indexOf","newFileList","slice","splice","beforeUpload","handleUpload","formData","FormData","forEach","append","width","marginBottom","textAlign","fontSize","fontWeight","color","content","format","length","marginTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Card, Button, Upload, message } from 'antd'\nimport { UploadOutlined } from '@ant-design/icons';\nimport { getFileName, upload } from '../../../axios/api'\n\nconst UploadWork = () => {\n    const [fileList, setFileList] = useState([])\n    const [uploading, setUploading] = useState(false)\n    const [fileName, setFileName] = useState({})\n\n    //初始化数据\n    useEffect(() => {\n        toGetFileName()\n    }, [])\n\n    //获取文件名以及格式\n    const toGetFileName = async () => {\n        try {\n            let { status, data, msg } = await getFileName()\n            if (status == '200') {\n                setFileName(data)\n            } else {\n                message.error(msg)\n            }\n        } catch (e) {\n            message.error('请求文件名称接口失败')\n        }\n    }\n\n    //上传文件的接口\n    const toUpload = async (formdata) => {\n        try {\n            let { status, msg } = await upload(formdata)\n            if (status === '200') {\n                setFileList([])\n                setUploading(false)\n                message.success('上传成功')\n            } else {\n                message.error(msg)\n                setUploading(false)\n            }\n        } catch (e) {\n            message.error('请求上传接口失败')\n            setUploading(false)\n        }\n    }\n\n    const props = {\n        onRemove: file => {\n            const index = fileList.indexOf(file);\n            const newFileList = fileList.slice();\n            newFileList.splice(index, 1)\n            setFileList(newFileList)\n        },\n        beforeUpload: file => {\n            setFileList([file])\n            return false;\n        },\n        fileList,\n    };\n\n    const handleUpload = () => {\n        setUploading(true)\n        upload(fileList[0])\n        const formData = new FormData();\n        fileList.forEach(file => {\n            formData.append('files[]', file);\n        });\n    }\n\n    return <React.Fragment>\n        <h3>上传作业</h3>\n        <Card title='上传要求' style={{ width: '100%', marginBottom: '50px' }}>\n            <div style={{ textAlign: 'center' }}>\n                <div>\n                    <span style={{ fontSize: '14px', fontWeight: 'bold' }}>本次上传的作业：</span>\n                    <span style={{ color: 'red' }}>{fileName.content}</span>\n                </div>\n                <div>\n                    <span style={{ fontSize: '14px', fontWeight: 'bold' }}>命名方式：</span>\n                    <span style={{ color: 'red' }}>{fileName.format}</span>\n                </div>\n            </div>\n        </Card>\n        <Card title='上传内容'>\n            <Upload {...props}>\n                <Button>\n                    <UploadOutlined />  上传\n                </Button>\n            </Upload>\n            <Button\n                type=\"primary\"\n                onClick={handleUpload}\n                disabled={fileList.length === 0}\n                loading={uploading}\n                style={{ marginTop: 16 }}\n            >\n                {uploading ? '上传中' : '开始上传'}\n            </Button>\n        </Card>\n    </React.Fragment>\n}\n\nexport default UploadWork"]},"metadata":{},"sourceType":"module"}