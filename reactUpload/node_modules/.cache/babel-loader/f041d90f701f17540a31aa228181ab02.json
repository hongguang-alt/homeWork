{"ast":null,"code":"import axios from'axios';//设置axios的基本配置\naxios.defaults.baseURL='http://122.152.193.177:3001';// 添加请求拦截器\naxios.interceptors.request.use(function(config){// 在发送请求之前做些什么\nvar token=window.localStorage.getItem('token');if(token){config.headers.authorization='Bearer '+token;}return config;},function(error){// 对请求错误做些什么\nreturn Promise.reject(error);});// 添加响应拦截器\naxios.interceptors.response.use(function(response){var data=response.data;// 对响应数据做点什么\nreturn data;},function(error){// 对响应错误做点什么\nreturn Promise.reject(error);});export default axios;","map":{"version":3,"sources":["/Users/wanghongguang/Desktop/homework/reactUpload/reactupload/src/axios/index.js"],"names":["axios","defaults","baseURL","interceptors","request","use","config","token","window","localStorage","getItem","headers","authorization","error","Promise","reject","response","data"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA;AACAA,KAAK,CAACC,QAAN,CAAeC,OAAf,CAAyB,6BAAzB,CAEA;AACAF,KAAK,CAACG,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+B,SAAUC,MAAV,CAAkB,CAC7C;AACA,GAAIC,CAAAA,KAAK,CAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAZ,CACA,GAAIH,KAAJ,CAAW,CACPD,MAAM,CAACK,OAAP,CAAeC,aAAf,CAA+B,UAAYL,KAA3C,CACH,CACD,MAAOD,CAAAA,MAAP,CACH,CAPD,CAOG,SAAUO,KAAV,CAAiB,CAChB;AACA,MAAOC,CAAAA,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP,CACH,CAVD,EAYA;AACAb,KAAK,CAACG,YAAN,CAAmBa,QAAnB,CAA4BX,GAA5B,CAAgC,SAAUW,QAAV,CAAoB,IAE5CC,CAAAA,IAF4C,CAG5CD,QAH4C,CAE5CC,IAF4C,CAIhD;AACA,MAAOA,CAAAA,IAAP,CACH,CAND,CAMG,SAAUJ,KAAV,CAAiB,CAChB;AACA,MAAOC,CAAAA,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP,CACH,CATD,EAWA,cAAeb,CAAAA,KAAf","sourcesContent":["import axios from 'axios'\n\n//设置axios的基本配置\naxios.defaults.baseURL = 'http://122.152.193.177:3001';\n\n// 添加请求拦截器\naxios.interceptors.request.use(function (config) {\n    // 在发送请求之前做些什么\n    let token = window.localStorage.getItem('token')\n    if (token) {\n        config.headers.authorization = 'Bearer ' + token;\n    }\n    return config;\n}, function (error) {\n    // 对请求错误做些什么\n    return Promise.reject(error);\n});\n\n// 添加响应拦截器\naxios.interceptors.response.use(function (response) {\n    const {\n        data\n    } = response\n    // 对响应数据做点什么\n    return data;\n}, function (error) {\n    // 对响应错误做点什么\n    return Promise.reject(error);\n});\n\nexport default axios"]},"metadata":{},"sourceType":"module"}