{"ast":null,"code":"import axios from 'axios'; //设置axios的基本配置\n\naxios.defaults.baseURL = 'http://hongguang.club:3001'; // 添加请求拦截器\n\naxios.interceptors.request.use(function (config) {\n  // 在发送请求之前做些什么\n  let token = window.localStorage.getItem('token');\n\n  if (token) {\n    config.headers.authorization = 'Bearer ' + token;\n  }\n\n  return config;\n}, function (error) {\n  // 对请求错误做些什么\n  return Promise.reject(error);\n}); // 添加响应拦截器\n\naxios.interceptors.response.use(function (response) {\n  const {\n    data\n  } = response; // 对响应数据做点什么\n\n  return data;\n}, function (error) {\n  // 对响应错误做点什么\n  return Promise.reject(error);\n});\nexport default axios;","map":{"version":3,"sources":["/Users/wanghongguang/Desktop/homework/reactUpload/reactupload/src/axios/index.js"],"names":["axios","defaults","baseURL","interceptors","request","use","config","token","window","localStorage","getItem","headers","authorization","error","Promise","reject","response","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACAA,KAAK,CAACC,QAAN,CAAeC,OAAf,GAAyB,4BAAzB,C,CAEA;;AACAF,KAAK,CAACG,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+B,UAAUC,MAAV,EAAkB;AAC7C;AACA,MAAIC,KAAK,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAZ;;AACA,MAAIH,KAAJ,EAAW;AACPD,IAAAA,MAAM,CAACK,OAAP,CAAeC,aAAf,GAA+B,YAAYL,KAA3C;AACH;;AACD,SAAOD,MAAP;AACH,CAPD,EAOG,UAAUO,KAAV,EAAiB;AAChB;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAVD,E,CAYA;;AACAb,KAAK,CAACG,YAAN,CAAmBa,QAAnB,CAA4BX,GAA5B,CAAgC,UAAUW,QAAV,EAAoB;AAChD,QAAM;AACFC,IAAAA;AADE,MAEFD,QAFJ,CADgD,CAIhD;;AACA,SAAOC,IAAP;AACH,CAND,EAMG,UAAUJ,KAAV,EAAiB;AAChB;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CATD;AAWA,eAAeb,KAAf","sourcesContent":["import axios from 'axios'\n\n//设置axios的基本配置\naxios.defaults.baseURL = 'http://hongguang.club:3001';\n\n// 添加请求拦截器\naxios.interceptors.request.use(function (config) {\n    // 在发送请求之前做些什么\n    let token = window.localStorage.getItem('token')\n    if (token) {\n        config.headers.authorization = 'Bearer ' + token;\n    }\n    return config;\n}, function (error) {\n    // 对请求错误做些什么\n    return Promise.reject(error);\n});\n\n// 添加响应拦截器\naxios.interceptors.response.use(function (response) {\n    const {\n        data\n    } = response\n    // 对响应数据做点什么\n    return data;\n}, function (error) {\n    // 对响应错误做点什么\n    return Promise.reject(error);\n});\n\nexport default axios"]},"metadata":{},"sourceType":"module"}